package libraryAPIProject;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import files.PayLoadLibrary;



public class Library {
	
	String bookID;
	
	@Test
	public void addBook() {
		
		RestAssured.baseURI = "http://216.10.245.166";
		String response = given().log().all().header("Content-Type","application/json")
		.body(PayLoadLibrary.addBook("ISBN-2123123","56A67")).when().post("/Library/Addbook.php")
		.then().log().all().assertThat().statusCode(200)
		.extract().response().asString();
		
		JsonPath js = ReUsableMethods.rawToJson(response);
		bookID= js.get("ID");
		
		System.out.println(bookID);
		
	}
	
	@DataProvider
	public Object[][] getData() {
		
		return new Object[][] {
			{"ISBN-72UI721","2FA76"},
			{"ISBN-62281","2FA3512"},
			{"ISBN-216319","2FA26123"}
		};
		
	}
	
	/*
	 * @Test public void deleteBook() {
	 * 
	 * RestAssured.baseURI = "http://216.10.245.166"; given().queryParam("ID",
	 * bookID) .body("{\r\n" + " \r\n" + "\"ID\" : \""+bookID+"\"\r\n" + " \r\n" +
	 * "} \r\n" +
	 * "").delete("/Library/DeleteBook.php").then().assertThat().log().all().
	 * statusCode(200); }
	 */
	
	

}
